{"version":3,"sources":["src/worker.js","src/webworker.js","src/resources/index.js","src/main.js","src/environment.js","src/app.js"],"names":["onmessage","e","data","process","undefined","i","result","var1","postMessage","webworker","singleResult","multiResult","webEmployee","Worker","webEmployee2","multiPress","multiResultFont","style","processList","innerHTML","multiPress2","multiResultFont2","singlePress","test","configure","config","aurelia","use","standardConfiguration","feature","environment","debug","developmentLogging","testing","plugin","start","then","setRoot","App","configureRouter","router","map","route","name","moduleId","title"],"mappings":"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","file":"app-bundle.js","sourcesContent":["\r\nthis.onmessage = function(e){\r\n    if(e.data.process != undefined){//if the request was to doMath\r\n        for(let i =0; i< 2000000000; i+=.5){\r\n\r\n        }\r\n        \r\n        //let result = {result: e.data.doMath.num1 + e.data.doMath.num2};\r\n        let result ={result: e.data.process.var1 + \" Done\"}\r\n        this.postMessage(result);//send message back with answer in e.data.result\r\n    }\r\n\r\n}","export class webworker{\r\n    constructor(){\r\n\r\n        this.singleResult='';\r\n        this.multiResult='Done!';\r\n        //var blob = new Blob([\"self.onmessage = function(event) { postMessage(event.data); }\"], {type: 'application/javascript'});  \r\n\r\n        //importScripts(\"./src/worker.js\");\r\n        //this.webEmployee = new Worker(URL.createObjectURL(blob));//register worker\r\n        this.webEmployee = new Worker(\"worker/worker.js\")//register worker\r\n        this.webEmployee2 = new Worker(\"worker/worker.js\")//register worker\r\n    }\r\n\r\n    multiPress(){\r\n\r\n        this.webEmployee.postMessage({ process:{ var1: \"Process1\"}});//send the message to the thread\r\n        \r\n        multiResultFont.style = \"visibility: hidden\";\r\n        this.webEmployee.onmessage = function(e){\r\n            //this.multiResult =\"hello\";//this doesnt work\r\n            //console.log(\"done\")//this works\r\n            multiResultFont.style =\"visibility: visible\";\r\n            processList.innerHTML = processList.innerHTML +\"<li> Result: \"+e.data.result+\" </li>\";\r\n            //alert(e.data.result)//this works\r\n\r\n        };\r\n\r\n    }\r\n\r\n\r\n    multiPress2(){\r\n        this.webEmployee2.postMessage({ process:{ var1: \"Process2\"}});//send the message to the thread\r\n        \r\n        multiResultFont2.style = \"visibility: hidden\";\r\n        this.webEmployee2.onmessage = function(e){\r\n            //this.multiResult =\"hello\";//this doesnt work\r\n            //console.log(\"done\")//this works\r\n            //alert(e.data.result)//this works\r\n            processList.innerHTML = processList.innerHTML +\"<li> Result: \"+e.data.result+\" </li>\";\r\n            multiResultFont2.style =\"visibility: visible\";\r\n            \r\n\r\n        };\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    singlePress(){\r\n      this.singleResult = '';\r\n        //alert(\"hello\");\r\n        let test = this.multiResult;\r\n        for(let i =0; i< 2000000000; i+=.5){\r\n\r\n        }\r\n        this.singleResult ='Done!'\r\n        processList.innerHTML = processList.innerHTML + \"<li> single thread finished </li>\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import 'bootstrap';\r\n\r\nexport class App {\r\n  configureRouter(config, router){\r\n    this.router= router;\r\n    config.map([{route: ['',\"webworker\"], name:\"webworker\", moduleId:\"webworker\", title:\"Web Worker\"}]);\r\n  }\r\n  constructor() {\r\n\r\n  }\r\n}\r\n"],"sourceRoot":".."}